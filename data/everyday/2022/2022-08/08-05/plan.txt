==============================
2022-8-5  Fri.     PLAN 
==============================

08:35-08:45      10 mins
P1. 10 type races. 10 minutes. ok. 11 races. 67WPM.

08:45-09:02     17 mins  ---------- free ----------
09:02-09:12      10 mins
P2. 制定今日的计划。 在gitmind中写。
-》 ok。 
-》重点的工作是：1）链表的归并排序； 2)反卷积； 3）风格迁移； 4）动态规划。

09:12-09:17      5 mins  ---------- free ----------
09:17-09:22       5 mins
P3. main中显示的视频，增加一个可选的项。1）下载一个新的视频 2）修改代码。
-> 5 minutes, 只够在youtube找视频；完成不了。

09:22-09:25      3 mins  ---------- free ----------
09:25-09:35      10 mins
P4. 接着上面的，完成代码的修改。 quick！ 
-> too late to finsih! -> 9:48 now! ok!

09:35-10:06     31 mins  ---------- free ----------
10:06-10:36      30 mins
P5. 尽量彻底将反卷积看懂。1）继续浏览昨晚的文档；2）自己推导一下反卷积的公式。
-》基本上搞掂了。主要是两种情况：原来的正向的卷积有padding和stride。
-》有个问题就是：pytorch中的stride和padding是正向卷积的还是现在反向的？应该是正向的，因为可以通过正向的p和s来推导出现在需要填充的情况，然后再根据k=k`的，s=1的，然后就可以计算出输出的转置卷积的特征图了。

10:36-14:33     4.0 hours ---------- free ----------
14:33-14:43      10 mins
P6. type 10 races. 10 minutes. 9 races, 66 WPM.

14:43-14:51      8 mins  ---------- free ----------
14:51-15:01      10 mins
P7. 测试一下 反卷积，使用pytorch实现，就是给定一个input，然后给定一个kernel，然后经过一个反卷积函数，然后，看看输出的尺寸和自己计算的尺寸的差别。
-> 验证过了， 计算公式是符合的。
-》 o` = i` + 2(k-1) + (i`-1)*(s-1) - 2p + 1
-> 其中，没有`的为正向的卷积，有`的为反向卷积的。

15:01-15:11     10 mins  ---------- free ----------
15:11-15:21      10 mins
P8. leecode, 10 minutes finsih the: buy sell stock, you can buy sell k times. Use the dynamitic project.
-》 写不出来。 不知道是哪一步出问题了。 

15:21-15:34     13 mins  ---------- free ----------
15:34-15:54      20 mins
P9. 买卖股票：1）解决一下k次交易的题目；2）含有冷冻期以及手续费的看看题目到底是在干什么？
-> 1) 解决了k次交易。 2）含有冷冻期的思路搞掂了，没有写。 3）含有手续费的没有看题解。不能使用贪心做。

15:54-16:11     17 mins  ---------- free ----------
16:11-16:21      10 mins
P10. 关于链表的问题：1）根据数组创建一个链表； 2）将node放进vector中，然后重新连接成一个链表。
-> 写好了，但是效率很低，不是很熟练；经常忘记写 1）cur = cur->next; 2) cur = nullptr.(vector... connection of the ListNode).

16:21-16:33     12 mins  ---------- free ----------
16:33-16:38       5 mins
P11. rest！ok！

16:38-16:41      3 mins  ---------- free ----------
16:41-16:51      10 mins
P12. 10 minutes 写完含有冻结期的股票交易。
-> 写不出来，思路很乱，没有想明白那个状态，比如不持有冻结状态，到底是今天买完了是，还是明天才是。

16:51-17:14     23 mins  ---------- free ----------
17:14-17:29      15 mins
P13. coding。 构思一下，手写一个卷积神经网络模型。大概的框架是怎样的，备注好。
-> 写好了一个大概的框架。

17:29-19:58     2.5 hours ---------- free ----------
19:58-20:28      30 mins
P14. 继续整理好cnn的pytorch下的框架。把大概再完善一下，然后再仔细看看有没有一些例子。
-> 整理了一下，顺便看了一下YOLO v4中的实现的情况，感觉是还可以的。
-》 总结起来，对于训练的话，需要的东西：1）数据 2）模型 3）loss 4）优化器；
需要各个突破的有：1) 权重的初始方式； 2）优化器的参数的设置： 学习率 以及 动量。

20:28-20:46     18 mins  ---------- free ----------
20:46-20:51       5 mins
P15. leecode写一个优化的冒泡排序。
-》 ok。在leecode原题上写了，但是还是超时了。本质的思想就是，当需要将剩余的最大值冒泡到某一个位置i的时候，然后从开始0位置开始一直进行比较，发现，从0到i这个位置，都没有发生数据的交换的行为，说明了：从0到i是有序的，所以，就不用冒泡排序0到i-1这些位置了。 ok！

20:51-20:56      5 mins  ---------- free ----------
20:56-21:16      20 mins
P16. 关于对于输入的图像进行bn操作的测试. 1)为什么要进行BN操作，有什么用？ 2）在哪里进行？pytorch中的哪一个步骤？ 3）里面的参数是什么意思，比如（0.5， 0.5）。。。。？
4） 和BN层的区别？
-> 测试了一下 torchvision中的transforms下面的ToTensor and Normalize。其中这两个都是对象来的。
然后就是，调用的时候，和Module一样，直接是调用__call__的。
-》 ToTensor是进行通道的调整以及除以255，输入必须是PIL或者np对象。
-》Noramlize的两个参数，mean和std，它们是tuple， tuple的len取决于输入的通道的数目。
-》基本ok！

21:16-21:42     26 mins  ---------- free ----------
21:42-21:57      15 mins
P17. 15min整理一下买卖股票中的含有冻结日期的状态的情况。至少应该理解。
->ok. 做出来了。关键是确定，所谓的状态是是指今天股市结束之后的情况。

21:57-22:06      9 mins  ---------- free ----------
22:06-22:26      20 mins
P18. 深度学习各个layer中的权重的初始化方式有哪些？比如卷积层？每一种方法的优缺点？用在什么地方？
->没有看完。但是总的理解了，一个方向，就是使模型收敛快一点，还有就是防止在训练的过程中发生梯度消失和梯度爆炸的情况。
-》极端是梯度消失和梯度爆炸，这样会造成输入和输出的方差不一致的问题。比如输入0,100，输出都是0，这明显就是处于激活函数的饱和区，不符合。理想就是类似于线性去，结果就是输入和输出的方差一致。
-》沿着这个理论，后续继续看看。

22:26-22:38     12 mins  ---------- free ----------
22:38-22:53      15 mins
P19. 买卖股票问题，含有手续费的问题。1）尝试整理一下思路； 2）会-》做，不会-> 看答案。
-》 ace！ 搞掂。还是挺简单的。就是两种状态而已，写出转移方程就好了。

22:53-23:03     10 mins  ---------- free ----------
23:03-23:13      10 mins
P20. 10 minutes: 写好链表排序中的归并排序，使用自顶向下的方法。
-> 写不出来。忘记怎样写了。
1）合并部分怎样弄？
2）合并什么？